syntax = "proto3";

option java_package = "com.example.ex3_2_back.grpc.server.event";
option java_outer_classname = "EventServiceProto";
option java_multiple_files = true;
option java_generic_services = true;

package event;

message EventServerResopnse{
    string message = 1;
    int32 code = 2;
    string data = 3;
}

//type 0-代表进门 1-代表出门
message FaceRecognitionEventRequest{
    int32 user_id = 1;
    string identity = 2;
    string imageUrl = 3;
    int32 cameraId = 4;
    int32 type = 5;
}

message EmotionDetectionEventRequest{
    int32 elderlyId = 1;
    string imageUrl = 2;
    string emotion = 3;
    int32 cameraId = 4;

}

message VolunteerInteractionEventRequest{
    int32 elderlyId = 1;
    int32 volunteerId = 2;
    string imageUrl = 3;
    int32 cameraId = 4;
}

message StrangerDetectionEventRequest{
    string imageUrl = 1;
    int32 cameraId = 2;
    int32 strangerId = 3;
}

message FallDetectionEventRequest{
    string imageUrl = 1;
    int32 elderlyId = 2;
    int32 cameraId = 3;
}

message ForbiddenAreaInvasionDetectionEventRequest{
    string imageUrl = 1;
    int32 cameraId = 2;
}

message FireDetectionEventRequest{
    string imageUrl = 1;
    int32 cameraId = 2;
}

message UpdateImageUrlRequest{
    int32 user_id = 1;
    string identity = 2;
    string username = 3;
    string image_url = 4;
}

service EventService {
//    rpc CreateEvent(EventRequest) returns (EventServerResopnse);
    rpc FaceRecognitionEvent(FaceRecognitionEventRequest) returns (EventServerResopnse);
    rpc EmotionDetectionEvent(EmotionDetectionEventRequest) returns (EventServerResopnse);
    rpc VolunteerInteractionEvent(VolunteerInteractionEventRequest) returns (EventServerResopnse);
    rpc StrangerDetectionEvent(StrangerDetectionEventRequest) returns (EventServerResopnse);
    rpc FallDetectionEvent(FallDetectionEventRequest) returns (EventServerResopnse);
    rpc ForbiddenAreaInvasionDetectionEvent(ForbiddenAreaInvasionDetectionEventRequest) returns (EventServerResopnse);
    rpc FireDetectionEvent(FireDetectionEventRequest) returns (EventServerResopnse);
    rpc UpdateImageUrl(UpdateImageUrlRequest) returns (EventServerResopnse);
}

